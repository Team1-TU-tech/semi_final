version: "3" 

services:  

  spark-master:  # Spark 마스터 서비스 정의
    image: bitnami/spark:latest  
    container_name: spark-master  
    environment:  
      - SPARK_MODE=master  # 마스터 노드 작동
    ports:
      - "8080:8080"  # 로컬 포트 8080을 컨테이너의 포트 8080과 연결 (Spark Web UI)
      - "7077:7077"  # 로컬 포트 7077을 컨테이너의 포트 7077과 연결 (Spark 마스터 포트)
    networks:
      - spark-net  # 'spark-net' 네트워크에 연결하여 Spark 클러스터 내부 통신

  spark-worker:  # Spark 워커 서비스 정의
    image: bitnami/spark:latest  
    container_name: spark-worker  
    environment:  
      - SPARK_MODE=worker  # 워커 노드 작동
      - SPARK_MASTER_URL=spark://spark-master:7077  # Spark 마스터의 URL을 지정. 워커가 마스터에 연결
    depends_on:
      - spark-master  # spark-master 서비스가 먼저 시작되도록 지정
    networks:
      - spark-net 

  spark-submit:  # Spark Submit 서비스 정의
    image: bitnami/spark:latest 
    container_name: spark-submit  
    environment:  
      - SPARK_MODE=submit  
      - SPARK_MASTER_URL=spark://spark-master:7077  # Spark 마스터의 URL을 지정. 작업 제출 시 마스터와 연결
    networks:
      - spark-net  
    depends_on:
      - spark-master  
      - spark-worker  
    volumes:
      - ./app:/app  # 로컬 디렉토리 'app'을 컨테이너의 '/app' 경로에 연결하여 PySpark 스크립트를 사용할 수 있게 설정
    entrypoint:  # 컨테이너가 시작될 때 자동으로 실행할 명령어 지정
      - "spark-submit"  
      - "--master"  # Spark 마스터 노드 지정
      - "spark://spark-master:7077"  # Spark 마스터의 URL을 지정하여 Spark 클러스터 모드에서 실행
      - "--conf"  # 추가적인 설정 지정
      - "spark.jars.ivy=/tmp/.ivy2"  # Ivy 캐시 경로를 /tmp/.ivy2로 설정하여 의존성 문제를 방지
      - "/app/pyspark_test.py"  # 실행할 PySpark 스크립트 파일 경로를 지정

networks:  # 서비스 간의 통신을 위한 네트워크 설정
  spark-net:  # 네트워크 이름을 'spark-net'로 지정
    driver: bridge  # 네트워크 드라이버로 'bridge'를 사용하여 컨테이너 간 연결을 설정
